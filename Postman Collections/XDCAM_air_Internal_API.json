{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "XDCAM air Internal API",
    "description": "TODO: Add Description"
  },
  "host": "example.com",
  "basePath": "/rest",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "http://example.com/rest",
      "scopes": {},
      "x-skip-client-authentication": false
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/rest/devices/receivers": {
      "get": {
        "description": "Get Receivers",
        "summary": "List Receivers",
        "tags": [
          "Receivers"
        ],
        "operationId": "RestDevicesReceiversGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/devices/receivers"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List Receivers",
            "x-testDescription": "Get Receivers"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/supported/receivers": {
      "get": {
        "description": "List all Receivers",
        "summary": "List  Supported Receivers",
        "tags": [
          "Receivers"
        ],
        "operationId": "RestDevicesSupportedReceiversGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/devices/supported/receivers"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List  Supported Receivers",
            "x-testDescription": "List all Receivers"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/transmitters": {
      "get": {
        "description": "Get Transmitters",
        "summary": "List  Transmitters",
        "tags": [
          "Transmitters"
        ],
        "operationId": "RestDevicesTransmittersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/devices/transmitters"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List  Transmitters",
            "x-testDescription": "Get Transmitters"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/supported/transmitters": {
      "get": {
        "description": "List all Transmitters",
        "summary": "List  Supported Transmitters",
        "tags": [
          "Transmitters"
        ],
        "operationId": "RestDevicesSupportedTransmittersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/devices/supported/transmitters"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List  Supported Transmitters",
            "x-testDescription": "List all Transmitters"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/auth/token": {
      "delete": {
        "description": "Logout",
        "summary": "Logout",
        "tags": [
          "Directory"
        ],
        "operationId": "RestAuthTokenDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "DELETE",
              "uri": "/rest/auth/token"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Logout",
            "x-testDescription": "Logout"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/auth/user": {
      "post": {
        "description": "if Successful the token will be returned in Response header as \"xairtoken'\"",
        "summary": "Login",
        "tags": [
          "Directory"
        ],
        "operationId": "RestAuthUserPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/rest/auth/user",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"username\":\"{{user}}\",\"password\":\"{{pswd}}\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Login",
            "x-testDescription": "if Successful the token will be returned in Response header as \"xairtoken'\""
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/entries/users": {
      "get": {
        "description": "List Users including Admin User",
        "summary": "List All Users",
        "tags": [
          "Directory"
        ],
        "operationId": "EntriesUsersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "useAdminRole",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/entries/users?useAdminRole=true"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List All Users",
            "x-testDescription": "List Users including Admin User"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/entries/tenants/{tenant-id}": {
      "get": {
        "description": "List Users including Admin User",
        "summary": "Get Tenant Detail",
        "tags": [
          "Directory"
        ],
        "operationId": "RestEntriesTenantsByTenantIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tenant-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/entries/groups": {
      "get": {
        "description": "List Users including Admin User",
        "summary": "List All Groups",
        "tags": [
          "Directory"
        ],
        "operationId": "RestEntriesGroupsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/entries/groups"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List All Groups",
            "x-testDescription": "List Users including Admin User"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "List Users including Admin User",
        "summary": "Create Project or Group",
        "tags": [
          "Directory"
        ],
        "operationId": "RestEntriesGroupsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectOrGrouprequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/rest/entries/groups",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"name\":\"Omar's Project\"}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Create Project or Group",
            "x-testDescription": "List Users including Admin User"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/entries/groups/{group-id}": {
      "put": {
        "description": "List Users including Admin User",
        "summary": "Rename Group",
        "tags": [
          "Directory"
        ],
        "operationId": "RestEntriesGroupsByGroupIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/RenameGrouprequest"
            }
          },
          {
            "name": "group-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "List Users including Admin User",
        "summary": "Delete Group",
        "tags": [
          "Directory"
        ],
        "operationId": "RestEntriesGroupsByGroupIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "group-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/entries/credentials": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Credentials",
        "tags": [
          "Directory"
        ],
        "operationId": "RestEntriesCredentialsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/entries/credentials"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List Credentials",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/entries": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Entries",
        "tags": [
          "Directory"
        ],
        "operationId": "EntriesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "useAdminRole",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/entries?useAdminRole=true"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List Entries",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/media/bins/{bin-id}/contents": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Bin Content",
        "tags": [
          "Media"
        ],
        "operationId": "MediaBinsContentsByBinIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "kind",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bin-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/media/assets": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "List Assets",
        "tags": [
          "Media"
        ],
        "operationId": "RestMediaAssetsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/rest/media/assets"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "List Assets",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/devices/health": {
      "get": {
        "description": "List Users including Admin User",
        "summary": "Misc GET",
        "tags": [
          "Scratch/Temporary"
        ],
        "operationId": "DevicesHealthGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/devices/health"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Misc GET",
            "x-testDescription": "List Users including Admin User"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/{transmitter-id}/files": {
      "get": {
        "description": "Returns a list of Camera files \nDatamodel - DeviceClipInfo",
        "summary": "List Camera Proxies",
        "tags": [
          "Device Clips"
        ],
        "operationId": "RestDevicesFilesByTransmitterIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transmitter-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/{transmitter-id}/files/thumbnail/{clip-name}": {
      "get": {
        "description": "Returns a list of Camera files \nDatamodel - DeviceClipInfo",
        "summary": "Get Camera Thumbnail",
        "tags": [
          "Device Clips"
        ],
        "operationId": "RestDevicesFilesThumbnailByTransmitterIdAndClipNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transmitter-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "clip-name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/devices/transmitters/{transmitter-id}/jobs": {
      "post": {
        "description": "Register a new transfer job. Pass the array of Device - FileClipInfo to the request body  .\r\n\r\nIf hires = true is added to Query Parameter, Hires file transfer is performed. \r\nAlso, if you specify the in = in point, out = out point, partialUpload is done. (valid for partialUploadable file)\r\n\r\nEven when Hires file transfer is performed, the clipName specified in the request body is that of the proxy file.\r\n\r\nIn the case of Proxy transfer, the transfer destination is the NCM FTP server.\r\n\r\nIf hires = true, specify the index number of the FTP server to be uploaded to ftpServer (even if hires = false, it is invalid even if it is specified)",
        "summary": "Start Transfer",
        "tags": [
          "Device File Transfer"
        ],
        "operationId": "DevicesTransmittersJobsByTransmitterIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transmitter-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/transmitters/{transmitter-id}/jobs": {
      "get": {
        "description": "Get a list of all transfer job",
        "summary": "List all jobs",
        "tags": [
          "Device File Transfer"
        ],
        "operationId": "RestDevicesTransmittersJobsByTransmitterIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transmitter-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete the transfer job. The movement changes according to the specification of clearCompleted.\r\n\r\ntrue: request body is ignored and jobs with status completed are deleted together\r\nfalse: the job ID specified in the request body is updated\r\nWhen false is specified, the request body has the following form.\r\n\r\n[\r\n   {\"jobId\":\"10\"},\r\n   {\"jobId\":\"20\"},\r\n   {\"jobId\":\"30\"}\r\n]\r\nThe following cases shall not be treated as Response error (return success)\r\n\r\nWhen clearCompleted = true and a completed job does not exist\r\nWhen the job specified by clearCompleted = false does not exist",
        "summary": "Delete Transfer Jobs",
        "tags": [
          "Device File Transfer"
        ],
        "operationId": "RestDevicesTransmittersJobsByTransmitterIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transmitter-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/streaming": {
      "post": {
        "description": "TODO: Add Description",
        "summary": "Start Streaming",
        "tags": [
          "Misc"
        ],
        "operationId": "RestStreamingPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StartStreamingrequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/rest/streaming",
              "headers": {
                "Content-Type": "application/json"
              },
              "body": "{\"type\":\"streaming\",\"inputSource\":{\"type\":\"transmitter\",\"id\":\"AWLbBnZKNZF78jESAjPL\"},\"outputPort\":{\"receiver\":{\"id\":\"AWHpD9GLNZF78jESAjB_\"},\"id\":\"AWHpD9GLNZF78jESAjB_-1\"},\"networkRange\":\"auto\",\"bitrate\":0,\"delay\":2.5,\"force\":false}"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Start Streaming",
            "x-testDescription": "TODO: Add Description"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/streaming/{streaming-id}": {
      "delete": {
        "description": "TODO: Add Description",
        "summary": "Stop Streaming",
        "tags": [
          "Misc"
        ],
        "operationId": "RestStreamingByStreamingIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "streaming-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/devices/transmitters/{transmitter-id}/thumbnail": {
      "get": {
        "description": "Get a thumbnail from the Transmitter",
        "summary": "Get Thumbnail",
        "tags": [
          "Misc"
        ],
        "operationId": "RestDevicesTransmittersThumbnailByTransmitterIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transmitter-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/streaming/{streaming-id}/audio-level": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Audio Level",
        "tags": [
          "Misc"
        ],
        "operationId": "RestStreamingAudioLevelByStreamingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "streaming-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/rest/streaming/{streaming-id}/transfer-info": {
      "get": {
        "description": "TODO: Add Description",
        "summary": "Get Transfer Info",
        "tags": [
          "Misc"
        ],
        "operationId": "RestStreamingTransferInfoByStreamingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "streaming-id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTransferInfo"
            },
            "examples": {
              "application/json": {
                "mediaData": [
                  {
                    "bitrateList": [
                      3409184,
                      3395620,
                      3458604,
                      3484332,
                      3430112,
                      3417100,
                      2813452,
                      2825676,
                      3414404,
                      3407544,
                      3414196,
                      3362372,
                      3395716,
                      3434304,
                      3394416,
                      3515048,
                      3581864,
                      3487044,
                      3516244,
                      3514804,
                      3468344,
                      3465668,
                      3510896,
                      3544340,
                      3379164,
                      3298908,
                      3378688,
                      3431736,
                      3463388,
                      3410136,
                      3366844,
                      3433152,
                      3329088,
                      3371672,
                      3509468,
                      3464548,
                      3462788,
                      3468628,
                      3481508,
                      3516048,
                      2698172,
                      2664152,
                      3414400,
                      3445496,
                      3488808,
                      3442832,
                      3495524,
                      3439228,
                      2944248,
                      2994216,
                      3457724,
                      3437172,
                      3450048,
                      3484152,
                      3351844,
                      3310588,
                      3320772,
                      3302816,
                      3425128,
                      3444868
                    ],
                    "qosLossList": [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    "maxBitrateValue": 3588596
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "LoginRequest": {
      "title": "LoginRequest",
      "example": {
        "username": "{{user}}",
        "password": "{{pswd}}"
      },
      "type": "object",
      "properties": {
        "username": {
          "description": "",
          "example": "{{user}}",
          "type": "string"
        },
        "password": {
          "description": "",
          "example": "{{pswd}}",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "CreateProjectOrGrouprequest": {
      "title": "Create Project or GroupRequest",
      "example": {
        "name": "Omar's Project"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Omar's Project",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "RenameGrouprequest": {
      "title": "Rename GroupRequest",
      "example": {
        "name": "Temp Project Renamed"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "example": "Temp Project Renamed",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "StartStreamingrequest": {
      "title": "Start StreamingRequest",
      "example": {
        "type": "streaming",
        "inputSource": {
          "type": "transmitter",
          "id": "AWLbBnZKNZF78jESAjPL"
        },
        "outputPort": {
          "receiver": {
            "id": "AWHpD9GLNZF78jESAjB_"
          },
          "id": "AWHpD9GLNZF78jESAjB_-1"
        },
        "networkRange": "auto",
        "bitrate": 0,
        "delay": 2.5,
        "force": false
      },
      "type": "object",
      "properties": {
        "type": {
          "description": "",
          "example": "streaming",
          "type": "string"
        },
        "inputSource": {
          "$ref": "#/definitions/InputSource"
        },
        "outputPort": {
          "$ref": "#/definitions/OutputPort"
        },
        "networkRange": {
          "description": "",
          "example": "auto",
          "type": "string"
        },
        "bitrate": {
          "description": "",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "delay": {
          "description": "",
          "example": 2.5,
          "type": "number",
          "format": "double"
        },
        "force": {
          "description": "",
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "inputSource",
        "outputPort",
        "networkRange",
        "bitrate",
        "delay",
        "force"
      ]
    },
    "InputSource": {
      "title": "InputSource",
      "example": {
        "type": "transmitter",
        "id": "AWLbBnZKNZF78jESAjPL"
      },
      "type": "object",
      "properties": {
        "type": {
          "description": "",
          "example": "transmitter",
          "type": "string"
        },
        "id": {
          "description": "",
          "example": "AWLbBnZKNZF78jESAjPL",
          "type": "string"
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "OutputPort": {
      "title": "OutputPort",
      "example": {
        "receiver": {
          "id": "AWHpD9GLNZF78jESAjB_"
        },
        "id": "AWHpD9GLNZF78jESAjB_-1"
      },
      "type": "object",
      "properties": {
        "receiver": {
          "$ref": "#/definitions/Receiver"
        },
        "id": {
          "description": "",
          "example": "AWHpD9GLNZF78jESAjB_-1",
          "type": "string"
        }
      },
      "required": [
        "receiver",
        "id"
      ]
    },
    "Receiver": {
      "title": "Receiver",
      "example": {
        "id": "AWHpD9GLNZF78jESAjB_"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "example": "AWHpD9GLNZF78jESAjB_",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "GetTransferInfo": {
      "title": "Get Transfer Info",
      "example": {
        "mediaData": [
          {
            "bitrateList": [
              3409184,
              3395620,
              3458604,
              3484332,
              3430112,
              3417100,
              2813452,
              2825676,
              3414404,
              3407544,
              3414196,
              3362372,
              3395716,
              3434304,
              3394416,
              3515048,
              3581864,
              3487044,
              3516244,
              3514804,
              3468344,
              3465668,
              3510896,
              3544340,
              3379164,
              3298908,
              3378688,
              3431736,
              3463388,
              3410136,
              3366844,
              3433152,
              3329088,
              3371672,
              3509468,
              3464548,
              3462788,
              3468628,
              3481508,
              3516048,
              2698172,
              2664152,
              3414400,
              3445496,
              3488808,
              3442832,
              3495524,
              3439228,
              2944248,
              2994216,
              3457724,
              3437172,
              3450048,
              3484152,
              3351844,
              3310588,
              3320772,
              3302816,
              3425128,
              3444868
            ],
            "qosLossList": [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            "maxBitrateValue": 3588596
          }
        ]
      },
      "type": "object",
      "properties": {
        "mediaData": {
          "description": "",
          "example": [
            {
              "bitrateList": [
                3409184,
                3395620,
                3458604,
                3484332,
                3430112,
                3417100,
                2813452,
                2825676,
                3414404,
                3407544,
                3414196,
                3362372,
                3395716,
                3434304,
                3394416,
                3515048,
                3581864,
                3487044,
                3516244,
                3514804,
                3468344,
                3465668,
                3510896,
                3544340,
                3379164,
                3298908,
                3378688,
                3431736,
                3463388,
                3410136,
                3366844,
                3433152,
                3329088,
                3371672,
                3509468,
                3464548,
                3462788,
                3468628,
                3481508,
                3516048,
                2698172,
                2664152,
                3414400,
                3445496,
                3488808,
                3442832,
                3495524,
                3439228,
                2944248,
                2994216,
                3457724,
                3437172,
                3450048,
                3484152,
                3351844,
                3310588,
                3320772,
                3302816,
                3425128,
                3444868
              ],
              "qosLossList": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "maxBitrateValue": 3588596
            }
          ],
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaDatum"
          }
        }
      },
      "required": [
        "mediaData"
      ]
    },
    "MediaDatum": {
      "title": "MediaDatum",
      "example": {
        "bitrateList": [
          3409184,
          3395620,
          3458604,
          3484332,
          3430112,
          3417100,
          2813452,
          2825676,
          3414404,
          3407544,
          3414196,
          3362372,
          3395716,
          3434304,
          3394416,
          3515048,
          3581864,
          3487044,
          3516244,
          3514804,
          3468344,
          3465668,
          3510896,
          3544340,
          3379164,
          3298908,
          3378688,
          3431736,
          3463388,
          3410136,
          3366844,
          3433152,
          3329088,
          3371672,
          3509468,
          3464548,
          3462788,
          3468628,
          3481508,
          3516048,
          2698172,
          2664152,
          3414400,
          3445496,
          3488808,
          3442832,
          3495524,
          3439228,
          2944248,
          2994216,
          3457724,
          3437172,
          3450048,
          3484152,
          3351844,
          3310588,
          3320772,
          3302816,
          3425128,
          3444868
        ],
        "qosLossList": [
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0,
          0
        ],
        "maxBitrateValue": 3588596
      },
      "type": "object",
      "properties": {
        "bitrateList": {
          "description": "",
          "example": [
            3409184,
            3395620,
            3458604,
            3484332,
            3430112,
            3417100,
            2813452,
            2825676,
            3414404,
            3407544,
            3414196,
            3362372,
            3395716,
            3434304,
            3394416,
            3515048,
            3581864,
            3487044,
            3516244,
            3514804,
            3468344,
            3465668,
            3510896,
            3544340,
            3379164,
            3298908,
            3378688,
            3431736,
            3463388,
            3410136,
            3366844,
            3433152,
            3329088,
            3371672,
            3509468,
            3464548,
            3462788,
            3468628,
            3481508,
            3516048,
            2698172,
            2664152,
            3414400,
            3445496,
            3488808,
            3442832,
            3495524,
            3439228,
            2944248,
            2994216,
            3457724,
            3437172,
            3450048,
            3484152,
            3351844,
            3310588,
            3320772,
            3302816,
            3425128,
            3444868
          ],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "qosLossList": {
          "description": "",
          "example": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ],
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "maxBitrateValue": {
          "description": "",
          "example": 3588596,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "bitrateList",
        "qosLossList",
        "maxBitrateValue"
      ]
    }
  }
}